
@{
    ViewBag.Title = "Dashboard";

    TimeSpan sut = SystemUpTime.getUptime();
    string computer;
}

<center>
    <br />  
    <h1 class="dash-title dash-fw">Dashboard</h1>
    <br />
    <h3 class="dash-divider dash-br">Local Monitoring</h3>

    <table>
        <tr>
            <td>
                <img src="@Url.Action("NetworkChart")" alt="SimpleChart" />
            </td>
            <td class="ramchart">
                <img src="@Url.Action("RamChart")" alt="SimpleChart" />
            </td>
            <td>
                <center>

                    @{
                        System.IO.DriveInfo Dinfo = new DriveInfo("C");

                        double Dsize = double.Parse(Dinfo.TotalSize.ToString()) / 1073741824;
                        double Dspace = double.Parse(Dinfo.TotalFreeSpace.ToString()) / 1073741824;

                        string DsizeResult = @Dsize.ToString("##.00");
                        string DspaceResult = @Dspace.ToString("##.00");
                    }

                    <p class="local-com-info dash-fw dash-br">Hostname - @Monitor.getHostName()</p>
                    <p class="local-com-info dash-fw dash-br">Uptime - @{ @sut.Days}d @{ @sut.Hours}h @{ @sut.Minutes}m @{ @sut.Seconds}s</p>
                    <p class="local-com-info dash-fw dash-br">Average CPU usage = @Monitor.getCpuUsageAvg(100)%</p>
                    <p class="local-com-info dash-fw dash-br">Total RAM = @Monitor.getTotalRAM()MB</p>
                    <p class="local-com-info dash-fw dash-br">Disk size = @DsizeResult GB</p>
                    <p class="local-com-info dash-fw dash-br">Disk freespace = @DspaceResult GB</p>
                </center>
            </td>
        </tr>
        <tr>
            <td></td>
            <td>
                <center>
                    <div class="color-block color-block-1"></div><p class="dash-fw">Current Available RAM = @Monitor.getAvailableRAM()MB</p>
                    <div class="color-block color-block-2"></div><p class="dash-fw">Current RAM in use = @Convert.ToInt32(Monitor.getCommittedRAM())MB</p>
                </center>
            </td>
        </tr>
    </table>

    <h3 class="dash-divider dash-br">Event-log</h3>

    @{EventLog[] EventLogs = GetEventLog.GetEventLogs(Monitor.getHostName());
        foreach (EventLog log in EventLogs)
        {
            string printLog = log.Log;
            <br />
            @printLog;
        }
      }
        
    }

    <h3 class="dash-divider dash-br">Remote Monitoring</h3>
    @{List<string> computers = Database.SqlGetComputers("SELECT name FROM computers") ; }
    <form method="post">
        <table>
            <tr>
                <td><center>Choose computer</center></td>
                <td><center>Add new computer</center></td>
            </tr>
            <tr>
                <td class="remote-mon-table-pad">
                    <select name="ddComputers">
                        @foreach (string c in computers)
                        {
                            <option value=@c>@c</option>
                        }
                    </select>
                </td>
                <td>
                    <input type="text" name="newComputer" value="" />
                </td>
            </tr>
        </table>
        <br />
        <input type="submit">
    </form>
    <br />
    @if (IsPost)
    {
        if(Request.Form["newComputer"] != "")
        {
            computer = Request.Form["newComputer"];
            Database.SqlAddComputer(computer);
        }
        else
        {
            computer = Request.Form["ddComputers"];
        }
        CimSession session = Monitor.wmiProcess(computer);

        var allVolumes = session.QueryInstances(@"root\cimv2", "WQL", "SELECT * FROM Win32_Volume");
        var allPDisks = session.QueryInstances(@"root\cimv2", "WQL", "SELECT * FROM Win32_DiskDrive");
        var allProcessors = session.QueryInstances(@"root\cimv2", "WQL", "SELECT * FROM Win32_Processor");

        List<string> propertyProc = new List<string>(new string[] { "SystemName", "Name", "LoadPercentage" });
        List<string> propertyDisk = new List<string>(new string[] { "DeviceID", "Model", "Partitions" });
        List<string> propertyVol = new List<string>(new string[] { "DriveLetter", "Capacity", "FreeSpace" });

        <table>
            <tr>
                <td class="remote-mon-table-pad">
                    <table class="remote-mon-table">
                        <tr class="remote-mon-table">
                            <td class="remote-mon-table">System Name</td>
                            <td class="remote-mon-table">CPU Model</td>
                            <td class="remote-mon-table">CPU Load</td>
                        </tr>
                        @foreach (CimInstance oneProcessor in allProcessors)
                        {
                            <tr class="remote-mon-table">
                                @foreach (string prop in propertyProc)
                                {
                                    <td class="remote-mon-table">@Monitor.formatCim(oneProcessor, prop)</td>
                                }
                            </tr>
                        }
                    </table>
                </td>
                <td>
                    <table class="remote-mon-table">
                        <tr class="remote-mon-table">
                            <td class="remote-mon-table">Disk ID</td>
                            <td class="remote-mon-table">Disk Model</td>
                            <td class="remote-mon-table">Disk Partitions</td>
                        </tr>
                        @foreach (CimInstance onePDisk in allPDisks)
                        {
                            <tr class="remote-mon-table">
                                @foreach (string prop in propertyDisk)
                                {
                                    <td class="remote-mon-table">@Monitor.formatCim(onePDisk, prop)</td>
                                }
                            </tr>
                        }
                    </table>
                </td>
            </tr>
        </table>

        <br />
        
        <table>
            <tr>
                <td>
                    <table class="remote-mon-table">
                        <tr class="remote-mon-table">
                            <td class="remote-mon-table">Drive Letter</td>
                            <td class="remote-mon-table">Capacity</td>
                            <td class="remote-mon-table">Free Space</td>
                        </tr>
                        @foreach (CimInstance oneVolume in allVolumes)
                        {
                            <tr class="remote-mon-table">
                                @if (oneVolume.CimInstanceProperties["DriveLetter"].ToString()[0] > ' ')
                                {
                                    if (@oneVolume.CimInstanceProperties["DriveLetter"].ToString() != "DriveLetter")
                                    {
                                        foreach (string prop in propertyVol)
                                        {
                                            <td class="remote-mon-table">
                                                @if (prop == "Capacity" || prop == "FreeSpace")
                                                {
                                                    <span>@(Convert.ToInt64(Monitor.formatCim(oneVolume, prop)) / 1000000) MB</span>
                                                }
                                                else
                                                {
                                                    @Monitor.formatCim(oneVolume, prop)
                                                }
                                            </td>
                                        }
                                    }
                                }
                            </tr>
                        }
                    </table>
                </td>
                <td>
                    <img src="@Url.Action("DiskChart", new { computer = computer })" alt="SimpleChart" />
                </td>
            </tr>
        </table>
    }
</center>